dist: trusty
sudo: require
language: cpp
compiler: gcc
install: false
cache: { directories: [ /tmp/cache ] }
services: [ docker ]

before_install:
  - | # Start up docker image
    if [ -f /tmp/cache/container.tar ]; then
      sudo docker import /tmp/cache/container.tar container
      CONTAINER=$(sudo docker run -td -v `pwd`:/build -w /build container /bin/bash)
    else
      CONTAINER=$(sudo docker run -td -v `pwd`:/build -w /build gcc)
      sudo docker exec $CONTAINER apt update
      sudo docker exec $CONTAINER apt install -y python3-pip
      sudo docker exec $CONTAINER curl -o /tmp/cmake-installer https://cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.sh
      sudo docker exec $CONTAINER bash /tmp/cmake-installer --skip-license --prefix=/tmp
      sudo docker exec $CONTAINER pip3 install conan
      sudo docker exec $CONTAINER conan config set compiler.libcxx=libstdc++11
      sudo docker exec $CONTAINER apt install -y libjq-dev
      sudo docker exec $CONTAINER rm /var/lib/apt/lists/*
      sudo docker export -o /tmp/cache/container.tar $CONTAINER
    fi

before_script:
  - | # Prepare build
    sudo docker exec $CONTAINER mkdir build
    sudo docker exec $CONTAINER bash -c 'cd build && conan install ..'
    sudo docker exec $CONTAINER bash -c 'cd build && /tmp/bin/cmake ..'
  
script:
  - | # Build and test
    sudo docker exec $CONTAINER bash -c 'cd build && make -j`nproc`'
    # sudo docker exec $CONTAINER bash -c 'cd build && make test'
